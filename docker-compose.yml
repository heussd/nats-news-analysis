x-loki: &loki
  logging:
    driver: loki # Requires loki docker driver: docker plugin install grafana/loki-docker-driver:latest --alias loki --grant-all-permissions
    options:
      loki-url: "http://host.docker.internal:3100/loki/api/v1/push" # <-- MUST be this address and NOT service name, otherwise Docker crashes
x-build: &build
  x-bake:
    platforms:
      - linux/amd64
      - linux/arm64


services:
  nats-server:
    image: docker.io/nats:2.9
    ports:
      - "4222:4222" # 4222 is for clients.
      - "8222:8222" # 8222 is an HTTP management port for information reporting.
      - "6222:6222" # 6222 is a routing port for clustering.
    volumes:
      - "./nats-persistence/:/data"
    command: "--jetstream --http_port 8222 --store_dir /data"
  fullfeedrss:
    image: docker.io/heussd/fivefilters-full-text-rss:latest
    scale: 2
    environment:
      # Leave empty to disable admin section
      - FTR_ADMIN_PASSWORD=
    volumes:
      - "rss-cache:/var/www/html/cache"
    
  loadbalancer:
    image: docker.io/nginx
    volumes:
      - "./loadbalancer/nginx.conf:/etc/nginx/nginx.conf"
    depends_on:
        - fullfeedrss
    ports:
        - '80:80'
  rss-article-url-feeder-go-1st:
    image: ghcr.io/heussd/nats-news-analysis/rss-article-url-feeder-go:latest
    build:
      <<: *build
      context: rss-article-url-feeder-go/.
    volumes:
      - type: bind
        source: ./urls-primary.txt
        target: /urls.txt
        consistency: cached
        read_only: true
    environment:
      - "NATS_SERVER=nats-server:4222"
      - "URLS=/urls.txt"
    restart: always
  rss-article-url-feeder-go-2nd:
    image: ghcr.io/heussd/nats-news-analysis/rss-article-url-feeder-go:latest
    volumes:
      - type: bind
        source: ./urls-secondary.txt
        target: /urls.txt
        consistency: cached
        read_only: true
    environment:
      - "NATS_SERVER=nats-server:4222"
      - "URLS=/urls.txt"
    restart: always
  rss-article-url-feeder-python:
    image: ghcr.io/heussd/nats-news-analysis/rss-article-url-feeder-python:latest
    build:
      <<: *build
      context: rss-article-url-feeder-python/.
      cache_from:
        - ghcr.io/heussd/nats-news-analysis/rss-article-url-feeder-python:latest
    scale: 0
    volumes:
      - type: bind
        source: ./urls.txt
        target: /urls.txt
        consistency: cached
        read_only: true
    environment:
      - "NATS_SERVER=nats-server:4222"
      - "URLS=/urls.txt"
  loki:
    container_name: loki
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./loki/local-config.yaml:/etc/loki/local-config.yaml
  keyword-matcher-python:
    scale: 4
    <<: *loki
    image: ghcr.io/heussd/nats-news-analysis/keyword-matcher-python:latest
    build:
      <<: *build
      context: keyword-matcher-python/.
      cache_from:
        - ghcr.io/heussd/nats-news-analysis/keyword-matcher-python:latest
    volumes:
      - type: bind
        source: ./keywords.txt
        target: /keywords.txt
        consistency: cached
        read_only: true
    environment:
      - "KEYWORDS_FILE:/keywords.txt"
      - "NATS_SERVER=nats-server:4222"
      - "FULLTEXTRSS_SERVER=http://loadbalancer:80"
  keyword-matcher-go:
    scale: 4
    <<: *loki
    image: ghcr.io/heussd/nats-news-analysis/keyword-matcher-go:latest
    build:
      <<: *build
      context: keyword-matcher-go/.
    volumes:
      - type: bind
        source: ./keywords.txt
        target: /keywords.txt
        consistency: cached
        read_only: true
    environment:
      - "KEYWORDS_FILE:/keywords.txt"
      - "NATS_SERVER=nats-server:4222"
      - "FULLTEXTRSS_SERVER=http://loadbalancer:80"
   
  pocket-integration:
    image: ghcr.io/heussd/nats-news-analysis/pocket-integration:latest
    build:
      <<: *build
      context: pocket-integration/.
      cache_from:
        - ghcr.io/heussd/nats-news-analysis/pocket-integration:latest
    environment:
      - "NATS_SERVER=nats-server:4222"
    secrets:
      - POCKET_ACCESS_TOKEN
      - POCKET_CONSUMER_KEY
  grafana:
    image: grafana/grafana:master
    volumes:
      - ./grafana/grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yaml
      - ./grafana/dashboard-provider.yaml:/etc/grafana/provisioning/dashboards/main.yaml
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    ports:
      - "3000:3000"
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus/:/etc/prometheus/
      - ./prom-storage:/usr/local/share/prometheus
    command: --config.file=/etc/prometheus/prometheus.yml --storage.tsdb.path=/usr/local/share/prometheus
  natsexporter:
    image: natsio/prometheus-nats-exporter
    ports:
    - "7777:7777"
    command: ['-varz', '-subz', "-serverz", '-connz', '-channelz', '-jsz', 'all', 'http://nats-server:8222']

volumes:
  rss-cache:

secrets:
  POCKET_ACCESS_TOKEN:
    file: ./POCKET_ACCESS_TOKEN.txt
  POCKET_CONSUMER_KEY:
    file: ./POCKET_CONSUMER_KEY.txt
